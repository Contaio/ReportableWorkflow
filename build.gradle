/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/current/userguide/java_library_plugin.html
 */

buildscript {
    ext {
        fsRuntimeVersion = '5.2.241009'
        jupiterVersion = '5.8.1'
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'de.espirit.firstspirit-module' version '6.4.0'
    id 'net.researchgate.release' version '3.0.2'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release.set(17)
}

group = project.property('groupId')

repositories {
    maven {
        url = 'https://artifactory.e-spirit.hosting/artifactory/repo/'
        credentials {
            // Do NOT edit these lines since the credentials will be read from the local Gradle configuration.
            username = artifactory_hosting_username
            password = artifactory_hosting_password
        }
    }
}

dependencies {
    compileOnly group: 'de.espirit.firstspirit', name: 'fs-isolated-runtime', version: "${fsRuntimeVersion}"
    testImplementation group: 'de.espirit.firstspirit', name: 'fs-isolated-runtime', version: "${fsRuntimeVersion}"
    implementation group: 'com.espirit.moddev.components', name: 'annotations', version: '3.2.0'
    compileOnly 'org.jetbrains:annotations:24.1.0'

    fsServerCompile project(':server')
    fsWebCompile project(':server')
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${jupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
}

/*
 * FirstSpirit Module Plugin configuration
 */

firstSpiritModule {
    moduleName = project.property('firstSpiritModule.moduleName')
    displayName = project.property('firstSpiritModule.displayName')
    description = project.property('firstSpiritModule.description')
    vendor = project.property('firstSpiritModule.vendor')
}

/*
 * Maven Publish Plugin configuration
 */

publishing {
    repositories {
        maven {
            credentials {
                // Do NOT edit these lines since the credentials will be read from the local Gradle configuration.
                username = artifactory_hosting_username
                password = artifactory_hosting_password
            }
            url "https://artifactory.e-spirit.hosting/artifactory/${version.endsWith("SNAPSHOT") ? project.property('publishing.snapshotRepository') : project.property('publishing.releaseRepository')}"
        }
    }
    publications {
        fsm(MavenPublication) {
            artifactId project.name
            artifact assembleFSM
        }
    }
}

/*
 * Release Plugin configuration
 */

release {
    ignoredSnapshotDependencies = ['de.espirit.firstspirit:fs-license']
    git {
        requireBranch.set("main|master")
    }
}

// publish artifacts after release
allprojects { p ->
    afterEvaluate {
        rootProject.afterReleaseBuild.dependsOn p.tasks.matching { it.name == 'publish' }
    }
}

/*
 * Verify gradle.properties values
 */

afterEvaluate {
    ['groupId', 'firstSpiritModule.moduleName', 'firstSpiritModule.displayName', 'firstSpiritModule.vendor', 'publishing.releaseRepository', 'publishing.snapshotRepository'].each {
        if (!project.hasProperty(it) || (project.property(it) as String).trim().empty) {
            throw new GradleException("Property '${it}' in gradle.properties must not be empty!")
        }
    }
}